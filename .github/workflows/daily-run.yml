name: Daily Script Run

on:
  schedule:
    # Runs every day at 15:30 UTC (9:00 PM IST)
    - cron: "30 15 * * *"
  workflow_dispatch:

jobs:
  run-scripts:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Upgrade pip tooling
        run: python -m pip install --upgrade pip setuptools wheel
        shell: bash

      - name: Install dependencies
        run: pip install -r requirements.txt
        shell: bash

      - name: Run all scripts (single log, colors, fail only if all fail)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          OPENAI_FINE_TUNED_MODEL: ${{ secrets.OPENAI_FINE_TUNED_MODEL }}
        run: |
          FAIL_COUNT=0
          TS=$(date +"%Y-%m-%d_%H-%M-%S")
          LOGFILE="run_log_${TS}.log"

          GREEN='\033[0;32m'
          RED='\033[0;31m'
          YELLOW='\033[1;33m'
          NC='\033[0m' # No Color

          echo "===== RUN STARTED AT ${TS} =====" | tee -a "$LOGFILE"

          echo -e "${YELLOW}‚ñ∂ Running audio_transcription.py...${NC}" | tee -a "$LOGFILE"
          python3 audio_transcription.py >> "$LOGFILE" 2>&1 \
            && echo -e "${GREEN}‚úÖ audio_transcription.py succeeded${NC}" | tee -a "$LOGFILE" \
            || { echo -e "${RED}‚ùå audio_transcription.py failed${NC}" | tee -a "$LOGFILE"; FAIL_COUNT=$((FAIL_COUNT+1)); }

          echo -e "${YELLOW}‚ñ∂ Running small_talk_classify.py...${NC}" | tee -a "$LOGFILE"
          python3 small_talk_classify.py >> "$LOGFILE" 2>&1 \
            && echo -e "${GREEN}‚úÖ small_talk_classify.py succeeded${NC}" | tee -a "$LOGFILE" \
            || { echo -e "${RED}‚ùå small_talk_classify.py failed${NC}" | tee -a "$LOGFILE"; FAIL_COUNT=$((FAIL_COUNT+1)); }

          echo -e "${YELLOW}‚ñ∂ Running theme_reclassification.py...${NC}" | tee -a "$LOGFILE"
          python3 theme_reclassification.py >> "$LOGFILE" 2>&1 \
            && echo -e "${GREEN}‚úÖ theme_reclassification.py succeeded${NC}" | tee -a "$LOGFILE" \
            || { echo -e "${RED}‚ùå theme_reclassification.py failed${NC}" | tee -a "$LOGFILE"; FAIL_COUNT=$((FAIL_COUNT+1)); }

          echo "===== RUN COMPLETED =====" | tee -a "$LOGFILE"

          if [ "$FAIL_COUNT" -eq 3 ]; then
            echo -e "${RED}üö® All scripts failed ‚Äî marking job as failed.${NC}" | tee -a "$LOGFILE"
            exit 1
          else
            echo -e "${GREEN}‚úÖ At least one script succeeded.${NC}" | tee -a "$LOGFILE"
          fi
        shell: bash

      - name: Upload log as artifact (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: script-log-${{ github.run_id }}
          path: run_log_*.log

      - name: Show last 200 log lines on failure
        if: failure()
        run: |
          echo "------ LAST 200 LINES OF LOG ------"
          tail -n 200 run_log_*.log || true
          echo "-----------------------------------"
        shell: bash

  cleanup-old-runs:
    runs-on: ubuntu-latest
    needs: run-scripts
    steps:
      - name: Delete workflow runs older than last 7
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_runs: 7
          delete_workflow_pattern: "Daily Script Run"

